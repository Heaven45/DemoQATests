plugins {
    id 'java'
    id "io.qameta.allure" version "2.8.1"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.15.0",
    selenideVersion = "5.24.0",
    junitVersion = "5.8.1"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    aspectjVersion = "1.9.6"

    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

configurations {
    testCompile {
        extendsFrom testImplementation
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            'org.junit.jupiter:junit-jupiter-params:5.7.2',
            'io.qameta.allure:allure-junit5:2.14.0',
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            'com.github.javafaker:javafaker:1.0.2',
            "org.slf4j:slf4j-simple:1.7.29",

    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:$junitVersion')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}